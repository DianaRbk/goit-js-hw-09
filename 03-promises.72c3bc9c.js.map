{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,QAC7BC,QAASF,SAASC,cAAc,uBAChCE,OAAQH,SAASC,cAAc,sBAC/BG,SAAUJ,SAASC,cAAc,0BAE7BF,KAAEM,EAAIH,QAAEI,EAAOH,OAAEI,EAAMH,SAAEI,GAAaV,EAE5C,SAASW,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAIbN,EAAKc,iBAAiB,UAAUC,IAC9BA,EAAEC,iBACF,IAAIC,EAAQC,OAAOjB,EAAQkB,OAC3B,MAAMC,EAAOF,OAAOhB,EAAOiB,OACrBE,EAASH,OAAOf,EAASgB,OAEzBG,EAAW,GAEjB,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAQE,IAAK,CAC/B,MACMC,EAAUpB,EADCmB,EAAI,EACmBN,GACrCQ,MAAK,EAACpB,SAAEA,EAAQC,MAAEA,MACjBoB,EAAAnC,GAASoC,OAAOC,QAAQ,qBAAqBvB,QAAeC,MAAU,IAEvEuB,OAAM,EAACxB,SAAEA,EAAQC,MAAEA,MAClBoB,EAAAnC,GAASoC,OAAOG,QAAQ,oBAAoBzB,QAAeC,MAAU,IAEzEgB,EAASS,KAAKP,GACdP,GAASG,C,CAGXb,QAAQyB,IAAIV,GACTG,MAAK,KACJC,EAAAnC,GAASoC,OAAOM,KAAK,mCAAmC,IAEzDJ,OAAM,KACLH,EAAAnC,GAASoC,OAAOM,KAAK,yCAAyC,GAC9D","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('form'),\n  delayEl: document.querySelector('input[name=\"delay\"]'),\n  stepEl: document.querySelector('input[name=\"step\"]'),\n  amountEl: document.querySelector('input[name=\"amount\"]'),\n};\nconst { form, delayEl, stepEl, amountEl } = refs;\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nform.addEventListener('submit', e => {\n  e.preventDefault();\n  let delay = Number(delayEl.value);\n  const step = Number(stepEl.value);\n  const amount = Number(amountEl.value);\n\n  const promises = [];\n\n  for (let i = 0; i < amount; i++) {\n    const position = i + 1;\n    const promise = createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n    promises.push(promise);\n    delay += step;\n  }\n\n  Promise.all(promises)\n    .then(() => {\n      Notiflix.Notify.info('All promises have been fulfilled');\n    })\n    .catch(() => {\n      Notiflix.Notify.info('At least one promise has been rejected');\n    });\n});\n\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","delayEl","stepEl","amountEl","$47d4ff9957288465$var$form","$47d4ff9957288465$var$delayEl","$47d4ff9957288465$var$stepEl","$47d4ff9957288465$var$amountEl","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","delay1","Number","value","step","amount","promises","i","promise","then","$parcel$interopDefault","Notify","success","catch","failure","push","all","info"],"version":3,"file":"03-promises.72c3bc9c.js.map"}